------------------------------ 초기 setting 과정 ------------------------------
1.Apache Tomcat-9.0.41 SetUp 과정
	C:\Program Files\Java\jre1.8.0_261 버전으로  jre 설치되어있는것 확인하기
	→ Destination Folder 에서 C:\Program Files\Apache Software Foundation\Tomcat 9.0로 되어있는 것을
	→ C:\Tomcat 9.0로 짧게 경로 바꿔주고 Install
2.워크 스페이스 생성
3. 프로젝트 생성
	File → New → Dynamic Web Project 또는 File → New → other... → Web → Dynamic Web Project
	만약 Dynamic Web Project가 안보인다면 Web Project(Web applications) 가능한 이클립스 재설치
	이클립스 재설치 : eclipse-inst-win64.exe 파일 실행 후 Eclipse IDE for Enterprise Java Developers(두번째) 눌러서 설치
4. Tomcat 설치 후 초기에 Run On Server(초록버튼) 실행 시 설정 단계
	How do you want to select the server? 에서 Manually define a new server 선택
	→ Apache에서 Tomcat v9.0 Server 클릭 후 next
	→ Tomcat installation directory 비어있는 부분에 입력
	→ Brouse 클릭
	→ C드라이브 Tomcat9.0 저장해놨던 폴더 한번 클릭 후 폴더선택
	→ finish
5. Tomcat Servers 생성 및 설정
	하단 Servers 탭 → tomcat v9.0 더블클릭
	→ port number (tomcat admin port 옆) 빈칸에  '9191' 입력 후 엔터 (9191 포트번호로 웹서버와 통신하면서 실행하겠다는 뜻) 
	→ ctrl+s (저장)
	→ Ex01 탭와서 다시 실행하면 insert html 창에 오류뜨면서 Inner Web Browser(이클립스 내부 브라우저)로 실행됨
	
[meta charset = 기본으로 설정된 meta charset="EUC-KR"을 "UTF-8"로 설정하는 방법]
	Window탭 → Preferences → Web = Html Files → 오른쪽 Encording에서 UTF-8 선택(맨 첫번째)
	EUC-KR : 영어는 기본이고 한글 처리 하겠다는 뜻
	UTF-8 : 다른 외국어까지 처리하겠다는 뜻

※모든 파일은 WebContent 찍고 실행하기
	WebContent 찍고 파일 붙여넣기 해도됨
	또는 우클릭하고 new - folder 로 가져올 수 있음
	
------------------------------ HTML ------------------------------
■주석 단축키 : (ctrl + shift + /) <!--주석-->로 표현함

■요소(Element)
시작과 종료 태그의 조합
셀프 클로징 태그 = 비어있는 태그 = 홀 태그 : meta,img,hr,br
열고 닫는 태그 사이에 입력할 것이 없을 경우 <태그명/>로 표시
■태그(Tag)
< >(꺽쇠)로 둘러 싸인 범위 안에 명령어 이름을 표시하며, 거의 모든 태그는 닫는 태그가 존재한다(/).
■속성(Attribute)
시작 태그 안에 삽입되며 =와 쌍따옴표를 이용하여 값을 지정한다.
태그 내의 [키="값"]으로 구성된 항목을 [속성]이라고 한다.
속성 위치 순서 상관없음
→ <태그 속성1="값1" 속성2="값2" 속성3="값3">
■값(Value)
속성에 들어 가는 실제 값이다.

■기본화면
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

</body>
</html>

●<html></html> : 문서의 맨 처음과 맨 끝에 들어감
●<head></head> : HTML 문서의 큰 제목 부분을 정함
●<title> </title> : 웹 페이지의 제목을 지정
●<body></body> : 웹 브라우저 화면에 보일 HTML 문서의 실제 내용이 기술되는 곳, HTML 문서의 본문
			 	  <body> 안에는 흰 바탕 화면에 실행되는 내용 작성
●link, vlink, alink : <body> 태그 내의 속성으로 사용이 된다. 링크, 방문한 링크, 클릭시 색을 지정

<body> 태그의 속성 :
	bgcolor(배경색), background(배경 이미지), text(본문 글자색)
	link(링크색), vlink(방문한 링크 색), alink(클릭하는 순간 링크색)
	leftmargin(왼쪽 여백), righrmargin(오른쪽 여백)
	topmargin, oncontextmenu, onselectstart, bgproperties, scroll


------------------------------ 서식 관련 태그 ------------------------------
●블럭 레벨 요소(Block-level Element): h1~h6, p div - 해당 줄 전체를 차지함, 자동 줄바꿈, 문단을 나눌 때 사용
●인라인(inline)요소: <span> - 내가 원하는 만큼만 영역으로 잡을 수 있음

<h1~6>제목</h1~6> : 클자크기 1~6 지정, 숫자가 작을수록 글씨가 큼, 자동 줄바꿈(엔터) 기능있음
<p>내용</p> : 본문에서 단락(문단)을 구분/나눌 때 사용, 자동 줄바꿈(엔터) 기능있음
<div></div> : 블럭 레벨 요소, 구역(division)을 나타내는 요소
<br> : 줄 바꿈(엔터) / 닫는 태그 없어도 됨

<b>내용</b> : 지정된 내용을 굵게(bold)
<em></em> : 강조, 이태릭체(기울임)
<i></i> : 이태릭체(italic)(기울임)
<u> </u> : 밑줄(underline)
<sub> </sub> : 아래 첨자(subscript)
<sup> </sup> : 위 첨자(superscript)
<hr></hr> : 수평선(horizontal rule)입력, 분리선 긋기 - 속성 들어갈 수 있음
	<hr size=n width=n align=left|center|right></hr> 수평선의 세로 두께,가로 넓이,문단에서 왼쪽|중앙|오른쪽을 지정
<font size=n color=영어,색상코드 face=글꼴체>내용</font> 글자를 크기,색상,글꼴을 지정

 <caption>렌터카 요금표</caption> : 제목 넣는 태그
 <tr>
 <th> 글자 진해짐 (제목 쓸 때 많이 사용)
 <td>/<td>

------------------------------ 목록 관련 태그(HTML_Ex02) ------------------------------
→ 리스트(목록) 만들기 : <ul> 태그와 <ol> 태그
→ 리스트 형태의 문서를 만들 때 사용
→ <li>로 목록(쓰고싶은 것) 묶어줌
→ <ul속성>, <ol속성> 과 같이 속성 써줄 수 있음

●<UL><LI></UL> : 비순차적 목록(Unordered List)
	번호에 관계없이 목록을 나열할 때 사용
	type : square(사각형),circle(흰원),disc(검은원,default값)
	→ 속성 작성 : <ul type="disc"> 또는 <ul type=" ">
●<OL><LI></OL> : 순차적 목록(Ordered List)
	번호가 있는 목록이 시작하는 곳에 <OL>을 사용
	type : A,a(알파벳),I,i(로마숫자),1(숫자,default값)
	→ 속성 작성 : <ol type="1"> 또는 <ol type=" ">
●<DL><DT><DD></DL> 정의 리스트(Definition List)
	용어에 대한 설명이나 정의를 위해 사용, 기본적으로 들여쓰기 하는 기능 있음
	dl,dt(제목),dd(내용) : 용어 정의

------------------------------ 그림 관련 태그(HTML_Ex03) ------------------------------
●<img> 태그는 그림을 삽입하기 위한 태그

alt : 이미지를 표시할 수 없을 때 대신 출력할 내용(글)
src : 보여줄 이미지의 경로(중요)
width : 이미지의 가로 크기를 지정
height : 이미지의 세로 크기를 지정
title : 이미지 위에 마우스 포인터 올리면 나타나는 툴팁
border : 이미지 테두리 두께(굵기)
align : 이미지 옆에 출력될 텍스트 정렬 방식(top, middle, bottom, left, right)
	<img src="파일명" width=n height=n border=n> 
	<img src="파일명" alt="그림설명" align=left, center, right> - Alt=그림에 대한 설명, ALIGN=그림정렬방식
	<img src="파일명" align=top, middle, bottom> - 그림 다음에 오는 글자를 그림의 상단,중앙,아랫부분에 집어넣을 수 있도록 지정
loading : 이미지 로딩 방식(모든 브라우저가 loading 속성을 지원하는 것은 아님)
	lazy: 모든 이미지를 로드하지 않고 일부만 불러옴
	eager: 모든 이미지를 불러옴(default값)
	
./images : 현재위치(WebContent) 밑에 있다 (./생략가능)
./../images : 같은폴더 위치 아니고, 현재폴더 상단에 있는 폴더(WebContent)


●<figure> : 사진, 이미지, 다이어그램 등을 감싸는 요소
<figcaption>이미지제목</figcaption> : figure 요소에 캡션을 만든다. figure 요소의 자식 요소이며,제일 처음 또는 제일 마지막에 위치
<img/> : img와 figcaption 위치 순서에 따라 figcaption 글자의 위치가 이미지 상단/하단에 위치한다.
</figure>

------------------------------ audio, vidio(HTML_Ex04) ------------------------------
★ audio, vidio 모두 외부 브라우저에서 실행해야 잘 실행됨

●<audio> 태그는 HTML 문서에 오디오을 삽입하는 태그

.ogg: firefox,opera 브라우저에서 실행 가능
.mp3: 인터넷 익스플로러,safari,chrome 브라우저에서 실행 가능


●<vidio> 태그는 HTML 문서에 동영상을 삽입하는 태그
HTML 5에서 추가된 것이므로, HTML 5를 지원하지 않는 웹브라우저(예를 들어 IE 8 이하)에서는 작동하지 않음
상충되거나 혼자서는 작동하지 않는 속성이 있다. 예를 들어 autoplay로 정하면 preload는 무시됨
크롬 등 일부 웹브라우저에서는 muted와 autoplay를 같이 사용해야 자동 시작이 작동함.

<video autoplay controls="controls" loop muted poster="aaa" preload="bbb">
  <source src="xxx" type="yyy">
  zzz
</video>

→ controls ="controls" 이므로 속성=값일 경우 값 생략가능, 속성은 위치 순서 상관없음
autoplay: 동영상을 자동으로 재생
controls: 재생, 정지 등 조작 메뉴를 보여줌
loop: 동영상을 반복 재생
muted: 음소거
poster: 동영상 재생 전에 보여줄 이미지
preload: 페이지를 열 때 무엇을 로드할지 정함
	auto: 동영상, 메타데이타 모두 로드
	metadata: 메타데이타만 로드
	none: 로드하지 않음
source
	src: 동영상 위치를 입력. 웹브라우저가 가장 많이 지원하는 형식은 MP4
	type: 동영상 타입을 알려줌. 만약 MP4 파일이라면 video/mp4라고 적는다.
	zzz: 웹브라우저가 video 태그를 지원하지 않을 때 출력될 텍스트

------------------------------ a 태그(HTML_Ex05) ------------------------------
●<a> 태그
에이 태그 또는 앵커(anchor) 태그라고 부른다.
하이퍼-링크로 많이 사용되는 태그이다.

href: 하이퍼링크의 주소(url)를 지정한다.
target: 링크를 어디에서 열지 정한다.
	_self : 같은 웹 브라우저 창(현재 페이지)에서 링크를 처리(default값)
	_blank : 새 창 또는 새 탭에서 링크를 처리
	_parent : 부모 요소의 웹 브라우저 창(부모가 없으면 _self 처럼 표시)
	_top : 최상위 부모 요소의 웹 브라우저 창

방법① 글자를 누르면 링크된 주소로 이동
	<a href="http://www.daum.net" title="www.daum.net" target="_self">다음</a>
방법② 그림을 누르면 링크된 주소로 이동
	<a href="https://www.starbucks.co.kr/">
		<img src="images/cafe2.jpg" width="100" height="100">
	</a>
방법③ 또다른 html로 넘어가도록 (같은 위치에 있으면  ./ 지정하지 않고 불러올 수 있음)
	<a href="./Ex03_img.html">
		<img src="images/cafe1.jpg" width="100" height="100">
	</a>
	
------------------------------ 프레임(HTML_Ex06) ------------------------------
●<iframe> : 내부 프레임(inline frame)이라는 의미로 하나의 HTML문서내에서 다른 HTML문서를 보여주고자 할때 사용 (프레임을 만들어서 그 안에 들어오게하기)
<frameset> 태그 사이에 올 필요가 없으며, 독립적으로 마치 <img> 태그를 사용하듯 문서내의 원하는 위치에 삽입할 수 있다.
아이프레임에서 사용할 수 있는 속성도 <img> 태그과 유사함.

<iframe></iframe>
	src: iframe에 삽입될 문서의 주소
	width: iframe의 너비 지정(px,% 가능)
	height: 높이 지정(px,% 가능)
	frameborder: iframe 경계선의 두께를 지정(테두리를 표시할지 말지 지정-1은 표시,0은 표시X)
	marginwidth: 내용의 위(top),아래(bottom) 여백 지정
	marginheight: 내용의 좌(left),우(right) 여백 지정
	scrolling: iframe 스크롤바 사용여부를 지정
		yes: 스크롤바가 생김(default값)
		no: 스크롤바가 생기지 않음
		auto: 자동
	align: iframe 정렬 (top:위, middle:중앙, bottom:아래, left:왼쪽, right:오른쪽)
	name: target이 필요한 프레임의 이름
<iframe src="http://www.starbucks.co.kr/" frameborder="0" width="600" height="300"
	marginwidth="0" marginheight="0" scrolling="yes">

------------------------------ id (HTML_Ex07) ------------------------------
●id 속성 : id=""
→ 특정 위치로 가고싶을 때 사용, 책갈피 효과, 값은 아무거나 넣어도됨
	이동하고 싶은 곳 속성에 id 달아주기
→ id 설정해둔 곳으로 가고 싶을때는 #을 사용

<body>
<ul>
<li><a href="#Toy1">Toy1</a></li>
</ul>

<h2 id="Toy1">Toy1</h2>
	<img src="images/toy1.jpg" width="250" height="500"
		alt="Toy1.jpg 이미지 입니다." />
<br>
	<a href="#">맨 위로 이동하기</a>
</body>

------------------------------ 이미지맵 (HTML_Ex08) ------------------------------
●이미지맵(image map): 이미지 상의 클릭 위치에 따라 다른 링카가 열리도록 하는것

<map> 태그: 이미지맵을 만드는 태그
→ name 속성을 통해 이름을 지정하고 <img> 태그에 usemap 속성으로 이미지 맵을 지정한다.
→ <map> 태그의 name의 이름과 usemap 속성의 value는 동일해야한다.
→ usemap 속성의 값에는 #을 앞에 작성해야한다.
→ map요소는 몇 가지의 area 요소를 포함, area요소는 이미지맵에서 영역을 지정한다.

<area> 태그: <map></map> 요소 내부에 포함되어 작성
alt: 대체 텍스트 지정
coords: 링크로 사용할 area(영역)의 좌표 지정(0,0이 왼쪽 상단)
href: 이동할 주소 지정
shape: area(영역)의 형태를 지정 
	rect: 사각형 모양(default값)
		coords="100,100,200,200"/> x1(좌표),y1(좌표),x2(가로길이),y2(세로길이)
		(100,100)좌표 영역 부터 (200,200)좌표 영역까지 사각형으로 지정하겠다는 뜻
	circle: 원형 영역
		coords="60,40,30"/> x1(원 중심좌표), y1(원 중심좌표), 반지름
	poly: 다각형 영역(x1,y1을 시작으로 꼭지점의 갯수대로 늘어나게된다.)
		삼각형: coords="x1,y1,x2,y2,x3,y3" (최소한의 도형)
		육각형: coords="x1,y1,x2,y2,x3,y3,x4,y4,x5,y5,x6,y6"
		(중요)반드시 한 방향으로만,차례대로 좌표값 입력해야함. x1,y1 으로 갔다가 갑자기 x4,y4로 갈 수 없음.
		
------------------------------ table (HTML_Ex09~Ex11) ------------------------------
<table> 태그 : 표 만들기(엑셀 화면과 같이 생김)
<tr>: 줄
<td>: 칸
칸 하나 : 셀(cell)이라고 함
bgcolor="yellow": 색 설정
bgcolor="#1DDB16": 색을 16진수로 바꿔서 표시
	R(red),G(green),B(blue) 각 2자리 씩 총 6자리로 구성
	각 색상은 0부터 255(FF)까지 총 255의 색상을 가지고 조합될 수 있다.
	앞에 #를 붙여서 표기한다.
cellspacing="0": 셀과 셀 사이의 간격 설정
cellpadding="10": 안쪽 여백 설정(셀과 내부 글자와의 간격을 벌려줌)
background="./images/book.jpg" : 배경으로 사진 불러오기

rowspan="2" : 행(칸 밑으로) 몇 줄 병합할지 여부
colspan="2" : 열(칸 옆으로) 몇 줄 병합할지 여부
align="center|rignt|left" : 정렬 방법 설정

------------------------------ form (HTML_Ex12) ------------------------------
 자바 : JTextField
<form> 태그: 데이터를 서버로 전송하는 태그(검색 창, 게시판, 로그인, 주문서, 회원 가입 등에 활용)
관련 속성: name(폼 이름), method(전송 메소드), action(이동할 페이지), targe

<imput> 태그: 사용자로부터 정보를 받아들이는 용도로 사용
type: 입력 태그의 유형
value: 입력 태그의 초기값을 말하며 사용자가 변경 가능함(실제 들어 있는 값 또는 사용자가 입력한 값)
name: 서버로 전달되는 이름을 말함(사용자 임의지정), 컨트롤에 이름을 부여
	input type="유형" name="이름"
	
<lable> 요소: input, textarea, select 요소와 같은 폼 요소의 제목을 달 때 사용

type 속성값: input type="유형"
	text: 텍스트(문자)를 입력하는 창 생성
	password: 비밀번호 입력하는 창 생성(비밀번호처럼 입력한 것 가려짐)
	email: @이메일 형태로 작성하지 않으면 오류남
	date: 날짜입력(외부 브라우저에서 보면 달력으로 나타남)
	week: 주와 연도 선택 컨트롤 창 생성
	number: 숫자만 입력받는 컨트롤 창 생성
	radio: name 값이 같으면 하나만 선택 가능, name 값이 다르면 다중 선택가능
	range: 지정한 숫자 사이의 숫자 선택 슬라이더 컨트롤 창 생성(평점) 
	checkbox: 체크박스 생성(여러개 선택가능)
		type="checkbox" value="바베큐" checked="checked" (이미 선택되어 나옴)
		속성이 같을 경우(checked="checked")에는 checked만 입력해도됨
	tel: 전화번호 입력받아서 검증하는 컨트롤 창 생성
	file: 파일을 지정할 수 있는 컨트롤(파일 업로드)
	
	<fieldset> 요소: 폼 컨트롤(input, select, textarea) 및  입력 박스들을 그룹화하는 용도로 사용, 자동으로 테두리가 생성
	복수의 컨트롤 요소를 하나의 그룹으로 범위를 정의하며 그룹화 및 구조화 할 수 있다.
	
	<select> <option></option> </select> : 콤보박스라고도 하며 Pull-Down Menus라고 표현하기도 한다. (여러 옵션 중 하나 선택할 때 사용)
	<select></select>: 목록 상자의 시작과 끝
	<option>: 목록 상자에 포함될 항목 지정
	<textarea></textarea>: 여러 줄 입력상자
		<textarea name="userMessage" rows="4" cols="30"></textarea> - text 여러줄 입력 가능, rows:몇줄, cols:한줄에 몇글자
	
	button: 일반 버튼 생성(단순히 버튼 눌리는 기능)
	submit: 서버로 제출/전송하는 버튼 생성 (submit일 경우에만 jsp로 넘겨서 db작업 해줄 수 있음)
	reset: 클릭과 동시에 입력한 것 모두 지워짐

------------------------------ 선택자 ------------------------------
태그
아이디
클래스
자식
자손
형제
그룹
전체
가상 클래스


▶ <span>영역잡기</span>

width: 50%; /* 너비 */
margin-left: 20px; /* 줄간격 */
line-height: 150% /* 줄간격 */

border: 1px solid #000; /* 테두리 굵기, 테두리종류(solid 실선), 테두리 색깔 */
	border-radius: 40px; /* 숫자가 클 수록 테두리 둥글게 설정 */
	border-radius: 70px 20px 10px 3px; /* 왼쪽상단 부분을 첫 시작으로 시계 방향 순으로 설정  */
	border-radius: 70px 20px; /* 70px 20px 70px 20px 와 같다고 보면됨 */
padding:30px; /* 30px만큼 안쪽 여백 설정 */
	padding-top: 10px;
	padding-right: 10px;
	padding: 10px 20px 50px 100px; /* top right bottom left(시계방향순으로 작성) */
	padding: 10px 30px; /* (10px 자리 : top,bottom / 30px자리: right,left) */
margin: 20px; /* 바깥쪽 여백 설정*/
	margin: 10px 5px 10px 20px; /*top right bottom left (시계방향순으로 작성) */

font-weight:bold; /* 글자 굵게 */

float: right; /* 이미지가 오른쪽 비어있는 공간으로  띄어오르게하기 */

▶클래스 선택자(2-1,2-2)
.class : 여러군데 적용시키고 싶을 때
<style type="text/css">
			.cook1{
				background-color: #f03;
				color: #fff;
				border:1px solid #000; /* 테두리 굵기, 테두리종류(solid 실선), 테두리 색깔 */
				padding:30px; /* 30px만큼 안쪽 여백 설정 */
				margin:20px; /* 바깥쪽 여백 설정*/
			}
			.cook2{
				background-color: #fc3;
				color: #783212;
				border:1px dotted #f00;
			}
			
			.reddotline{
				color: red;
				border-bottom: dotted;
				border-bottom-color: red; /* 테두리 색 */
			}
			
			.bluedotline{
				color:blue;
				border-bottom: dotted;
				border-bottom-color: blue;
			}
		</style>

▶id 선택자(3-1,3-2)
#id : 문서 전체에서 한번만 적용시키고 싶을 경우 , 문서 안에서 id는 단 한 개만 존재해야 하지만 여러번 써도 에러가 나지는 않음

		<title>아이디 선택자 사용하기</title>
		<meta charset="UTF-8" />
		<style type="text/css">
			#source{ /* id소스에 적용시킴 */
				background-color: #ffc;
				width:200px;
				line-height: 150%;
				list-style: none; /* 리스트 스타일 지정x */
				border:1px solid #000;
			}

		</style>
	</head>

	<body>
		<h1>아이디 선택자 사용하기</h1>
		<hr />
		<h2>도가니탕</h2> 
		<h3>재료-4인분 기준</h3>
		<ul id="source"> 
			<li>도가니 1개</li>
			<li>양지머리 300g</li>
			<li>무 200g</li>
			<li>마늘 5쪽</li>
			<li>대파 3뿌리</li>
			<li>생강 1쪽</li>
		</ul>

▶속성선택자(4-1,4-2)
a[title^="제과"] : ^ : a태그 title 속성에 제과로 시작하는 글자만 해당
a[title$="기능장"] : $ : 기능장으로 끝나는 글자만 해당
a[title*="산업기사"] : * :  중간에 산업기사 들어간 글자만 해당

▶자식 선택자(5-1)
h2>span{ /* h2의 자식인 span만 선택 적용 */
				color:#f00;
			}
text-decoration: underline; /* 글자에 밑줄 */

▶인접 형제 선택자(5-2) - 같은 부모 안에있는 형제 선택 시 사용
hr+h3{ /* hr 바로 뒤에나오는 h3 자리 선택 */
				background-color: #f60;
			}
			
▶링크 관련 가상 클래스 선택자(6-1)	
a:hover{ /* a 태그에 마우스 올렸을 때 적용됨 */
	background-color: #cf3;
}

a:focus{ /* a 태그에 마우스 클릭했을 때 적용됨 */
				background-color: #000;
				color:yelow;
			}

▶순서와 관련있는 가상 선택자(7-1)	
/* 첫번째 li 태그 적용  */
			li:first-child{
				color:lime;
				background-color: brown;
			}
		/* 마지막 li 태그 적용 */
			li:last-child{
				color:blue;
				background-color: yellow;
			}
			
		/* 짝수번째 li 태그  */
			li:nth-child(even){ /* even(짝수) 또는 odd(홀수) */
				color:red;
				background-color: cyan;
			}
			
		/* 세번째 li 태그  */
			li:nth-child(3){
				color:white;
				background-color: pink;
			}


▶전체 선택자 사용하기(8-1) : *
*{ /* 전체선택자 - 모든 태그에 적용 */
				color:silver;
				margin: 10px;
				padding: 0px;
			}
			
▶그룹 선택자 사용하기(8-2) : ,
/* 여러 선택자에 같은 CSS 속성을 정의합니다.  */
			h1, h2, h3, h4 { /* 공통적으로 설정할 것들을 그룹(,)으로 묶어 적용시키기 */
				font-size:20px;
				/* 폰트 설정(처음쓴 글꼴이없으면 , 다음 폰트로 넘어감 - 글자에 공백있으면 ""로 묶기) */
				font-family: "맑은 고딕", 궁서; 
			}
▶소속을 정하는 트리 구조의 하위 자손 선택자(9-1)
/* #box1>p>span{ /* id="box1"의 자식 p, p의 자식 span에 적용 */
			#box1 span{ /* 자손선택 : 띄어쓰기 */
				color:red;
			}
▶소속을 정하는 트리 구조의 하위 자손 선택자(9-2)
/* licenseList1 아이디로 지정된 li 요소의 a 요소의 title에 조리 포함된 곳 배경 노랑 설정 */
			/* #licenseList1 a[title*="조리"]{ */
			/* #licenseList1 li a[title*="조리"]{ */
			#licenseList1 > li > a[title*="조리"] {
				background-color: yellow;
			}
▶속성 값의 상속 관계 알아보기(10-1)
<style type="text/css">
			*{ /* 전체영역 설정 */
				font-family: "맑은 고딕", 바탕, "Times new Roman";
			}
			
			#cookingSrc{
				color : #f0d;
				font-size:15px;
			}
			
			#cookingSrc > p{ /* 자식 or 자손 둘다 사용가능 */
				line-height: 150%;
				width: 500px;
				background-color: cyan;
			}
			
			#cookingSrc p span{ /* 자식 or 자손 둘다 사용가능 */
				color:blue;
				font-weight:bold; /* 글자 굵게 */
			
			}
		</style>
▶선택자 우선 순위 (10-2)
!important > 아이디 선택자 > 클래스/속성/가상 선택자 > 태그 선택자(예:span) > 전체선택자

<style type="text/css">
			body{
				background-color: #000;
				color:cyan;
			}
			
			#bgPage1{
				color:#fff;	
			}
			
			.bgPage2 {
				color:#cf0;
			}
			
			.blueText{
				color:blue;
				background-color: yellow;
			}
			
			span{ /* 클래스선택자>태그선택자 이지만, !important 중요 표시해주면 지정된 값나옴 */
				color:red !important;
			}
		</style>

------------chap03-----------------
글꼴설정
요소 여백처리
이미지 넣기
글자 그림자, 블럭요소 그림자
테이블 스타일 설정

▶글자와 관련된 속성(1-1)
	<head>
		<title> 글자와 관련된 속성 알아보기 </title>
		<meta charset="UTF-8" />
		<style type="text/css">
		
			#box1 h2 { /* 따로따로 설정  - 쉼표로 구분해주지 않음 */
				font-family: "Times New Roman", sans-serif;
				font-size: 2em;
				font-weight: nomal; /* 글씨 굵기(bold 등) */
				font-style: italic; 
			}
			
			#box2 h2{ /* 한꺼번에 설정 */
				font: italic 30px "Time New Roman"
			}
			
		</style>
	</head>
	

▶요소의 크기 지정 및 여백 처리하기(3-1)
<style type="text/css">
			h1{
				border : 2px solid red; /* 테두리 설정 */
				margin-top: 30px;
				font : 1.5em "맑은 고딕",sans-serif /* 쉼표로 구분해 주는 것은 글꼴에 관한 설정 */
				padding-bottom:20px;
				text-align: center; /* 글자 가운데 정렬 */
			}
			
			div{
				border : 2px solid green;
			}
			
			p{
				border : 2px solid cyan;
				/* padding-top: 10px;
				padding-right: 10px; */
				/* padding : 10px 20px 50px 100px; */ /* top right bottom left(시계방향순으로 작성) */
				/* padding:10px 30px; */ /* (10px 자리 : top,bottom / 30px자리: right,left) */
				padding:10px;
			}
		</style>
		
▶모서리가 둥근 테두리 만들기(3-3)
<style type="text/css">
			div {
				background: #6d6d6d;
				border: 10px solid #f00;
			}
			p{
				background-color: #fff;
				line-height: 200%; /* 줄간격 */
				margin: 40px;
				padding: 15px;
			}
			.round1{
				border: 10px solid #ff9933;
				/* border-radius: 40px; */ /* 숫자가 클 수록 테두리 둥글게 설정 */
				/* border-radius: 70px 20px 10px 3px; */ /* 왼쪽상단 부분을 첫 시작으로 시계 방향 순으로 설정  */
				border-radius: 70px 20px; /* 70px 20px 70px 20px 와 같다고 보면됨 */
				
			}
			.round2{
				border: 10px solid yellow;
				border-radius: 20px 70px;
			
			}
		</style>

▶요소의 배경 처리하기(4-1)
		<title>요소의 배경 처리하기</title>
		<meta charset="UTF-8" />
		<style type="text/css">
			body{
				background-color: silver;
				background-image: url(./../images/shoes1.png); /* 이미지 불러와서 배경 설정 */
				background-repeat: repeat-y; /* y축 또는 x축 한줄로만 반복 넣기 */
				/* background-repeat: no-repeat; */ /* 반복하지 않는다 */
				background-position: top right; /* default값 : top left */
				background-attachment: fixed; /* 배경 이미지는 멈춰있고 글만 움직임 (default값: scroll) */
			}
			
			div{
				background: url(./../images/bg1.png) repeat-y fixed;
				width : 80%;
			}
			p{
				background: url(../images/dot.png) repeat-x bottom Left;
			}
		</style>
		

▶그림자 효과 만들기(5-2)
<style type="text/css">
			h1{
				width: 400px;
				background: #fc3;
				border-radius: 20px 0px;
				box-shadow: 10px 20px 0px #ff0066;
				/* h1영역을 박스처럼 생각해서 좌우위치 위아래위치 번짐정도 그림자 색지정 */
				text-shadow: 5px 20px 7px #000;
			}
		</style>
▶테이블에 관련된 속성 알아보기(6-1)
<style type="text/css">
			#table1{ /* 스타일이용해서 적용하는 방법 */
				border: 1px solid black; /* 전체 테두리 */
				border-collapse: collapse; 
				/* separate: 셀 테두리를 겹쳐서 표시, collapse(default값): 셀의 테두리 선 간격을 벌려 표시 */
				empty-cells: hide; /* 값이 비어있는 셀 안보이게 설정 */
				border-spacing: 0px; /* 셀과 셀 사이 가나격 설정 */
				width : 500px;
			}
			#table1 caption, #table1 th, #table1 td{ /* 하나하나 넣을땐 tr은 안됨 / 그룹으로 묶어줌 */
				border: 2px solid blue;
			}
			#table1 caption {
			 border-radius : 10px;
			
			}
			#table1 th{
				background: #b2ebf4;
			}
			#table1 td:first-child{ /* td의 모든 첫번째 태그에 적용  */
				background: #2f9d27;
				text-align: center;
			}
		</style>

------------chap04-----------------
▶이미지 요소 옆에 문단 흐르게 만들기(1-1)
dt:before { /* 모든 db 앞에 // 넣으라는 뜻 */
→시멘틱 요소 : 어떤 내용을 쓸 지에 대해 더 자세히 알려주기 위한 태그들. 아래 태그들을 사용 안했다고 해서 오류가 나지 않음 
<header></header> : body 안 본문의 제목으로 넣고 싶을 때 사용
<hgroup></hgroup> : 헤더 안 그룹으로 넣어서 사용
<nav></nav> : 메뉴 넣고 싶을 때 사용
<section></section> : 진짜 본문의 내용 작성
<article></article> : section(본문) 안에 있음
<aside></aside> : 배너 넣을 때 사용
<footer> : 맨 아래쪽 내용 위치

▶02_00_position
<style type="text/css">
		div{
			width: 250px;
			height: 250px;
		}
		.box1 {
			border: 3px solid red;
			position: fixed;
			/* static(default): 차례대로 나옴, relative: 원래 있어야하는 자리에서 상대적으로 px 크기 만큼 꼭지점(0.0) 이동
			absolute: 꼭지점(0.0)을 항상 기준으로 놓고 px 크기 만큼 이동, fixed: 고정 */
			left: 20px;
			top: 30px;
			
		}
		.box2 {
			border: 3px solid blue;
			position: fixed;
			left: 100px;
			top:100px;
			
		}
		.box3 {
			border: 3px solid green;
			position: fixed;
			left: 200px;
			top:200px;
			
		}
	</style>

▶고정 좌표 방식으로 배치하기(2-3)
&quot; : 따옴표
&nbsp; : 공백
letter-spacing: 

			/* layout */
			/* ★ */
			header {
				position: fixed;
				width: 100%;
				top: 0px;
				left: 0px
				
			}
			nav {
				border: 1px solid gray;
				width: 200px;
				background-color: #FFd8d8;
				position: fixed;
				top: 80px;
				left: 50px;
				padding: 15px;
			}
			section {
				width: 500px;
				margin : 80px 0px 50px 350px;	
			}
			/* ★ */

▶(1-1)
▶(1-1)
▶(1-1)
▶(1-1)